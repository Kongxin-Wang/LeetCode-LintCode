/*
LeetCode 258:
Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

For example:

Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.

Follow up:
Could you do it without any loop/recursion in O(1) runtime?


Solution:
Language: C
Tag:
*/

int addDigits(int num) {
    /*
    // 1. recursion
    if (num < 10) {
        return num;
    }
    int tmp = 0;
    while (num != 0) {
        tmp += (num % 10);
        num /= 10;
    }
    return addDigits(tmp);
    */
    
    /*
    // 2. loop
    while (num >= 10) {
        int tmp = 0;
        while (num != 0) {
            tmp += (num % 10);
            num /= 10;
        }
        num = tmp;
    }
    return num;
    */
    
    // 3. math -- 10^n % 9 == 1 -- an*10^n + ... + a1*10 + a0 â‰¡ an + ... + a1 + a0 (mod 9).
    //return (num - 1) % 9 + 1; // since -1 % 9 = -1 in C++
    int res = num % 9;
    if (res != 0 || num == 0) {
        return res;
    }
    return 9;
}
