/*
LeetCode 441:
You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.

Given n, find the total number of full staircase rows that can be formed.

n is a non-negative integer and fits within the range of a 32-bit signed integer.

Example 1:

n = 5

The coins can form the following rows:
¤
¤ ¤
¤ ¤

Because the 3rd row is incomplete, we return 2.
Example 2:

n = 8

The coins can form the following rows:
¤
¤ ¤
¤ ¤ ¤
¤ ¤

Because the 4th row is incomplete, we return 3.


Solution:
Language: C++
Tag: binary search
*/

class Solution {
public:
    int arrangeCoins(int n) {
        /*
        // 1. O(sqrt(n)) time
        int level = 1;
        while (n >= level) {
            n -= level;
            ++level;
        }
        return level - 1;
        */
        
        // 2. binary search -- O(logn) time
        if (n <= 0) {
            return 0;
        }
        int left = 1, right = n;
        while (left + 1 < right) {
            int mid = left + (right - left) / 2;
            if ((long)mid * (mid + 1) / 2 <= n ) {
                left = mid;
            } else {
                right = mid;
            }
        }
        if ((long)left * (left + 1) / 2 <= n) {
            return left;
        }
        return right;
        
        /*
        // 3. math (1 + 2 +.. + k = (k + 1) * k / 2 <= n)
        if (n <= 0) {
            return 0;
        }
        int k = (int)sqrt(n);
        while ((long)(k + 1) * k / 2 <= n) { // if use n * 2 -- may cause integer overflow
            ++k;
        }
        return (k - 1);
        */
        
        /*
        // 4. math -- O(1) time
        if (n <= 0) {
            return 0;
        }
        return (int)(sqrt((long)n * 8 + 1) - 1) / 2;
        */
    }
};
