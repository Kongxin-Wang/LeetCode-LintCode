/*
LeetCode 80:
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array nums = [1,1,1,2,2,3],

Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.

Solution:
Language: C++
Tag: 2Pointer
*/

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if (nums.empty()) {
            return 0;
        }
        /*
        // 1. two pointer -- O(n) time + O(1) space
        int idx = 1;
        bool less_twice = true;
        for (int i = 1; i < nums.size(); ++i) {
            if (nums[i] != nums[i - 1]) {
                nums[idx++] = nums[i];
                less_twice = true;
            } else if (nums[i] == nums[i - 1] && less_twice == true) {
                nums[idx++] = nums[i];
                less_twice = false;
            }
        }
        return idx;
        */
        
        // 2. two pointer -- O(n) time + O(1) space
        int idx = 0;
        for (int num : nums) {
            if (idx < 2 || num > nums[idx - 2]) {
                nums[idx++] = num;
            }
        }
        return idx;
    }
};
