/*
LeetCode 383:
Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true

Solution:
Language: C++
Tag: hashmap
*/

class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        /*
        // 1. hash -- O(m + n) time + O(n) space
        unordered_map<char, int> hashmap;
        for (int i = 0; i < magazine.length(); ++i) {
            if (hashmap.find(magazine[i]) != hashmap.end()) {
                ++hashmap[magazine[i]];
            } else {
                hashmap[magazine[i]] = 1;
            }
        }
        for (int i = 0; i < ransomNote.size(); ++i) {
            if (hashmap.find(ransomNote[i]) == hashmap.end()
                || hashmap[ransomNote[i]] == 0) {
                return false;
            } else {
                --hashmap[ransomNote[i]];
            }
        }
        return true;
        */
        
        // 2.
        int *hash = new int[26];
        for (int i = 0; i < 26; ++i) {
            hash[i] = 0;
        }
        for (int i = 0; i < magazine.length(); ++i) {
            ++hash[magazine[i] - 'a'];
        }
        for (int i = 0; i < ransomNote.length(); ++i) {
            if (hash[ransomNote[i] - 'a'] == 0) {
                return false;
            } else {
                --hash[ransomNote[i] - 'a'];
            }
        }
        return true;
    }
};
