/*
LeetCode: 643
Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.

Example 1:
Input: [1,12,-5,-6,50,3], k = 4
Output: 12.75
Explanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75
Note:
1 <= k <= n <= 30,000.
Elements of the given array will be in the range [-10,000, 10,000].

Solution:
Language: C++
Tag: Subarray
*/

class Solution {
public:
    #define max(a, b) (a > b ? a : b)
    double findMaxAverage(vector<int>& nums, int k) {
        // 1. O(n) time + O(1) space
        int sum = 0;
        int max_sum = INT_MIN;
        for (int i = 0; i < nums.size(); ++i) {
            sum += nums[i];
            if (i >= k) {
                sum -= nums[i - k];
            }
            if (i >= k - 1) {
                max_sum = max(max_sum, sum);
            }
        }
        return ((double)max_sum / k);
    }
};
